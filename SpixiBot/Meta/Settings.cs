using IXICore;
using IXICore.Meta;
using IXICore.Utils;
using System;
using System.Collections.Generic;
using System.IO;

namespace SpixiBot.Meta
{
    class Settings
    {
        private Dictionary<string, string> settings = new Dictionary<string, string>();
        string path = "settings.dat";

        public Settings(string path)
        {
            this.path = path;
            loadSettings(path);
        }

        private bool loadSettings(string path)
        {
            Stream file_stream;
            try
            {
                file_stream = File.OpenRead(path);
            }
            catch (Exception)
            {
                file_stream = null;
            }
            if (file_stream == null)
            {
                Logging.error("Error loading file " + path);
                return false;
            }

            Dictionary<string, string> settings = new Dictionary<string, string>();

            StreamReader sr = new StreamReader(file_stream);
            string last_key = "";

            bool success = true;

            while (!sr.EndOfStream)
            {
                string line = sr.ReadLine().Trim();
                if (line == "" || line.StartsWith(";"))
                {
                    continue;
                }

                int sep_index = line.IndexOf("=");
                if (sep_index == -1)
                {
                    success = false;
                    break;
                }

                last_key = line.Substring(0, sep_index).Trim();
                string value = line.Substring(sep_index + 1).Trim();
                if (last_key == "")
                {
                    success = false;
                    break;
                }
                settings.AddOrReplace(last_key, value);
            }

            sr.Close();
            sr.Dispose();

            file_stream.Close();
            file_stream.Dispose();

            if (!success)
            {
                return false;
            }

            this.settings = settings;

            return true;
        }

        public bool saveSettings()
        {
            lock (settings)
            {
                Stream file_stream;
                try
                {
                    file_stream = File.OpenWrite(path);
                }
                catch (Exception)
                {
                    file_stream = null;
                }
                if (file_stream == null)
                {
                    Logging.error("Error loading file " + path);
                    return false;
                }

                StreamWriter sr = new StreamWriter(file_stream);

                sr.WriteLine("; Generated by SpixiBot");

                setOption("generatedTime", Clock.getNetworkTimestamp().ToString());

                foreach (var setting in settings)
                {
                    sr.WriteLine(setting.Key + " = " + setting.Value);
                }

                sr.Close();
                sr.Dispose();

                file_stream.Close();
                file_stream.Dispose();
            }
            return true;
        }

        public string getOption(string key, string default_value)
        {
            lock (settings)
            {
                if (settings.ContainsKey(key))
                {
                    return settings[key];
                }
            }
            return default_value;
        }

        public void setOption(string key, string value)
        {
            lock (settings)
            {
                settings.AddOrReplace(key, value);
            }
            saveSettings();
        }
    }
}
